""" –§–∞–π–ª —Å –∫–æ–¥–æ–º —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å RAG"""

import streamlit as st
import requests


def rag_page() -> None:
    """ –°—Ç—Ä–∞–Ω–∏—Ü–∞ streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π RAG"""
    if "file_uploaded" not in st.session_state:
        st.session_state["file_uploaded"] = False

    st.markdown(
        "<h1 style='text-align: center; color: #4CAF50;'>ü§ñ –ß–∞—Ç —Å LLM –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ CSV —Ñ–∞–π–ª–∞</h1>",
        unsafe_allow_html=True,
    )

    st.markdown("## üì• –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª")

    uploaded_file = st.file_uploader("", type="csv")

    if not st.session_state["file_uploaded"] and uploaded_file is not None:
        files = {"file": uploaded_file}
        url = "http://127.0.0.1:8000/load/"  # –ê–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ FastAPI —Å–µ—Ä–≤–µ—Ä–∞
        # –û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞ —Å —Ñ–∞–π–ª–æ–º
        response = requests.post(url, files=files).json()  # .get('message')
        print(response)
        st.success("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
        st.session_state["file_uploaded"] = True

    if st.session_state["file_uploaded"]:
        if st.button("üîÑ –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª"):
            st.session_state["file_uploaded"] = False
            st.session_state["history"] = []
            st.experimental_rerun()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    if "history" not in st.session_state:
        st.session_state["history"] = []

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–∞—Ç–∞
    if True:
        st.markdown("---")
        st.markdown("## üí¨ –ß–∞—Ç")

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        for _, chat in enumerate(st.session_state["history"]):
            if chat["role"] == "user":
                with st.chat_message("user", avatar="bot_icon.png"):
                    st.write(chat["content"])
            else:
                with st.chat_message("bot", avatar="user_icon.png"):
                    st.write(chat["content"])

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞
        question = st.text_input("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å LLM:")

        if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å") and question:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
            st.session_state["history"].append({"role": "user", "content": question})

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç LLM
            url = "http://127.0.0.1:8000/llm_query/"

            response = (
                requests.post(url, json={"user_message": question})
                .json()
                .get("message")
            )
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é

            st.session_state["history"].append(
                {"role": "assistant", "content": response}
            )

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            st.rerun()

    else:
        st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞.")

    # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é CSS
    st.markdown(
        """
        <style>
        .stButton>button {
            background-color: #4CAF50;
            color:white;
        }
        .stTextInput>div>div>input {
            background-color: #f1f1f1;
        }
        </style>
        """,
        unsafe_allow_html=True,
    )
